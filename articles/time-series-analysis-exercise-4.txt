計量時系列分析の4章の数値計算
2020-12-25

@p{引き続き次の本を読んでいる。}
@ul{@a{経済・ファイナンスデータの計量時系列分析}{https://www.amazon.co.jp/dp/4254127928}、	沖本竜義著}
@p{今回は4章の演習問題のうち、数値計算部分を次の記事を参考にしながら解いてみる。}
@ul
  {@a{【第4章】pythonで「経済・ファイナンスデータの計量時系列分析」の章末問題を解く}{https://qiita.com/mckeeeen/items/4afa1167008c1f315d0b}}

@section{問題4.5}

@subsection{データの取得}
@p{データは以前と同じく}
@ul{@a{朝倉書店｜経済・ファイナンスデータの 計量時系列分析  }{http://www.asakura.co.jp/books/isbn/978-4-254-12792-8/}}
@p{からダウンロードしてきて使用する。}
@blcode{
import pandas as pd
data = pd.read_excel('msci_day.xls')
data = data[['Date', 'jp', 'uk', 'us']]
}
@p{まずは変化率の列を作成する。}
@blcode{
import numpy as np
from matplotlib import pyplot as plt

data['jp_cr'] = np.log(data['jp']).diff()
data['uk_cr'] = np.log(data['uk']).diff()
data['us_cr'] = np.log(data['us']).diff()
data.dropna(inplace=True)

_, ax = plt.subplots(nrows=3, ncols=1)
ax[0].plot(data.Date, data.jp_cr)
ax[0].set_title('jp_cr')
ax[1].plot(data.Date, data.uk_cr)
ax[1].set_title('uk_cr')
ax[2].plot(data.Date, data.us_cr)
ax[2].set_title('us_cr')
plt.tight_layout()
plt.savefig('figure-4-5-1.png')
plt.close()
}
@fig{50}{@rel{/static/time-series-analysis-exercise-4/figure-4-5-1.png}}
@p{定常的に見えるのでVAR関連の分析を行うことができそう。}

@p{これ以降VARモデルの当てはめをする際にはdataframeのindexをtimeseriesに変換しておく必要がある。}
@blcode{
data.index = pd.DatetimeIndex(data.Date)
data.drop(columns='Date', inplace=True)
}

@subsection{VARモデルの推定}
@p{変化率のデータを使ってVARモデルの推定を行う。}
@blcode{
from statsmodels.tsa.vector_ar.var_model import VAR

aics = list()
for p in range(1, 11):
  model = VAR(data[['jp_cr', 'uk_cr', 'us_cr']], dates=data['Date'], freq='B').fit(maxlags=p)
  aics.append(model.aic)

plt.plot(np.arange(1, 11), aics)
plt.savefig('figure-4-5-2.png')
plt.title('AIC')
plt.close()
}
@fig{40}{@rel{/static/time-series-analysis-exercise-4/figure-4-5-2.png}}
@p{AICが一番低いのはVAR(4)かVAR(6)あたりという感じになりそう。}

@subsection{グレンジャー因果の検定}
@p{教科書と同じVAR(3)モデルを今一度推定する。}
@blcode{
model = VAR(data[['jp_cr', 'uk_cr', 'us_cr']], dates=data['Date'], freq='B').fit(maxlags=3)
}
@p{この結果を使ってグレンジャー因果を検定してみる。}
@blcode{
uk2jp = model.test_causality('jp_cr', 'uk_cr', kind='f', signif=0.05)
uk2jp.test_statistic // 12.012495863151996
uk2jp.pvalue // 7.917449229649696e-08
}
@p{再現できていそう。}

@subsection{インパルス応答関数}
@blcode{
model.irf(periods=10).plot()
plt.savefig('figure-4-5-3.png')
plt.close()
}
@fig{50}{@rel{/static/time-series-analysis-exercise-4/figure-4-5-3.png}}
@p{全体的な傾向は教科書とかは変わらなさそうだが、細かい計算結果はだいぶ異なる様に見える。}

@subsection{相対的分散寄与率}
@blcode{
model.fevd(periods=10).plot()
plt.savefig('figure-4-5-4.png')
plt.close()
}
@fig{50}{@rel{/static/time-series-analysis-exercise-4/figure-4-5-4.png}}

@section{問題4.6}
@p{問題4.6でやることは問題4.5でやることとほぼ同じなので、わざわざ繰り返すことはしない。}